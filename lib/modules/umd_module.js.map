{"version":3,"sources":["../es_harmony/ng_harmony.js"],"names":[],"mappings":"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","file":"umd_module.js","sourcesContent":["export class Harmony {\n    constructor (...args) {\n        for (let [i, injectee] of this.constructor.$inject.entries()) {\n            this[injectee] = args[i];\n        }\n        for (let [key, fn] of this.iterate(this.constructor.prototype)) {\n            if (typeof fn === 'function' &&\n                key[0] === '$') {\n                this.$scope[key.slice(0, 1)] = this.$scope[key] = (...args) => {\n                    return fn.apply(this, args);\n                }\n            }\n        }\n        if (typeof this.initialize === \"function\") {\n            this.initialize();\n        }\n    }\n    static get $inject () {\n        return this._$inject || [\"$scope\"];\n    }\n    static set $inject (injectees) {\n        let _injectees = [];\n        if (!Array.isArray(injectees)) {\n            injectees = [injectees];\n        }\n        for (let [i, injecteeStr] of injectees.entries()) {\n            let truthy = true;\n            for (let [j, _injecteeStr] of this.$inject.entries()) {\n                if (injecteeStr === _injecteeStr) {\n                    truthy = false;\n                }\n            }\n            if (truthy) {\n                _injectees.push(injecteeStr);\n            }\n        }\n        this._$inject = this.$inject.concat(injectees);\n    }\n\n    static set $register (descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n            angular.module(module)[klass.type](klass.name, this);\n        }\n    }\n    static iterate (o) {\n        return (function*(_o) {\n            for (let [i, key] of Object.getOwnPropertyNames(_o).entries()) {\n                yield [key, _o[key]];\n            }\n        })(o);\n    }\n    static mixin (...mixins) {\n        for (let [i, mixin] of mixins.entries()) {\n            for (let [k, v] of this.iterate(mixin)) {\n                let p = this.prototype;\n                while (p[k] !== undefined && p[k] !== null) {\n                    p = p.prototype;\n                }\n                Object.defineProperty(p, k, {\n                    value: v,\n                    enumerable: true\n                });\n            }\n        }\n    }\n    toString () {\n        return this.name || super.toString().match(/function\\s*(.*?)\\(/)[1];\n    }\n}\n\nexport class Controller extends Harmony {\n    static set $register(descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n             angular.module(module).controller(klass.name, this);\n        }\n    }\n    digest () {\n        try { this.$scope.$digest(); }\n        catch (ng_ex) { \"noop\"; }\n    }\n}\nController.$inject = \"$element\";\n\nexport class Service extends Harmony {\n    static set $register(descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n            angular.module(module)[klass.type || \"service\"](klass.name, this);\n        }\n    }\n}\nService.$inject = \"$http\";"]}