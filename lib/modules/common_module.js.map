{"version":3,"sources":["../es_harmony/ng_harmony.js"],"names":[],"mappings":"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","file":"common_module.js","sourcesContent":["export class Harmony {\n    constructor (...args) {\n        for (let [i, injectee] of this.constructor.$inject.entries()) {\n            this[injectee] = args[i];\n        }\n        for (let [key, fn] of this.iterate(this.constructor.prototype)) {\n            if (typeof fn === 'function' &&\n                key[0] === '$') {\n                this.$scope[key.slice(0, 1)] = this.$scope[key] = (...args) => {\n                    return fn.apply(this, args);\n                }\n            }\n        }\n        if (typeof this.initialize === \"function\") {\n            this.initialize();\n        }\n    }\n    static get $inject () {\n        return this._$inject || [\"$scope\"];\n    }\n    static set $inject (injectees) {\n        let _injectees = [];\n        if (!Array.isArray(injectees)) {\n            injectees = [injectees];\n        }\n        for (let [i, injecteeStr] of injectees.entries()) {\n            let truthy = true;\n            for (let [j, _injecteeStr] of this.$inject.entries()) {\n                if (injecteeStr === _injecteeStr) {\n                    truthy = false;\n                }\n            }\n            if (truthy) {\n                _injectees.push(injecteeStr);\n            }\n        }\n        this._$inject = this.$inject.concat(injectees);\n    }\n\n    static set $register (descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n            angular.module(module)[klass.type](klass.name, this);\n        }\n    }\n    static iterate (o) {\n        return (function*(_o) {\n            for (let [i, key] of Object.getOwnPropertyNames(_o).entries()) {\n                yield [key, _o[key]];\n            }\n        })(o);\n    }\n    static mixin (...mixins) {\n        for (let [i, mixin] of mixins.entries()) {\n            for (let [k, v] of this.iterate(mixin)) {\n                let p = this.prototype;\n                while (p[k] !== undefined && p[k] !== null) {\n                    p = p.prototype;\n                }\n                Object.defineProperty(p, k, {\n                    value: v,\n                    enumerable: true\n                });\n            }\n        }\n    }\n    toString () {\n        return this.name || super.toString().match(/function\\s*(.*?)\\(/)[1];\n    }\n}\n\nexport class Controller extends Harmony {\n    static set $register(descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n             angular.module(module).controller(klass.name, this);\n        }\n    }\n    digest () {\n        try { this.$scope.$digest(); }\n        catch (ng_ex) { \"noop\"; }\n    }\n}\nController.$inject = \"$element\";\n\nexport class Service extends Harmony {\n    static set $register(descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n            angular.module(module)[klass.type || \"service\"](klass.name, this);\n        }\n    }\n}\nService.$inject = \"$http\";"]}