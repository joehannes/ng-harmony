{"version":3,"sources":["../es_harmony/ng_harmony.js"],"names":[],"mappings":"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","file":"system_module.js","sourcesContent":["export class Harmony {\n    constructor (...args) {\n        for (let [i, injectee] of this.constructor.$inject.entries()) {\n            this[injectee] = args[i];\n        }\n        for (let [key, fn] of this.iterate(this.constructor.prototype)) {\n            if (typeof fn === 'function' &&\n                key[0] === '$') {\n                this.$scope[key.slice(0, 1)] = this.$scope[key] = (...args) => {\n                    return fn.apply(this, args);\n                }\n            }\n        }\n        if (typeof this.initialize === \"function\") {\n            this.initialize();\n        }\n    }\n    static get $inject () {\n        return this._$inject || [\"$scope\"];\n    }\n    static set $inject (injectees) {\n        let _injectees = [];\n        if (!Array.isArray(injectees)) {\n            injectees = [injectees];\n        }\n        for (let [i, injecteeStr] of injectees.entries()) {\n            let truthy = true;\n            for (let [j, _injecteeStr] of this.$inject.entries()) {\n                if (injecteeStr === _injecteeStr) {\n                    truthy = false;\n                }\n            }\n            if (truthy) {\n                _injectees.push(injecteeStr);\n            }\n        }\n        this._$inject = this.$inject.concat(injectees);\n    }\n\n    static set $register (descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n            angular.module(module)[klass.type](klass.name, this);\n        }\n    }\n    static iterate (o) {\n        return (function*(_o) {\n            for (let [i, key] of Object.getOwnPropertyNames(_o).entries()) {\n                yield [key, _o[key]];\n            }\n        })(o);\n    }\n    static mixin (...mixins) {\n        for (let [i, mixin] of mixins.entries()) {\n            for (let [k, v] of this.iterate(mixin)) {\n                let p = this.prototype;\n                while (p[k] !== undefined && p[k] !== null) {\n                    p = p.prototype;\n                }\n                Object.defineProperty(p, k, {\n                    value: v,\n                    enumerable: true\n                });\n            }\n        }\n    }\n    toString () {\n        return this.name || super.toString().match(/function\\s*(.*?)\\(/)[1];\n    }\n}\n\nexport class Controller extends Harmony {\n    static set $register(descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n             angular.module(module).controller(klass.name, this);\n        }\n    }\n    digest () {\n        try { this.$scope.$digest(); }\n        catch (ng_ex) { \"noop\"; }\n    }\n}\nController.$inject = \"$element\";\n\nexport class Service extends Harmony {\n    static set $register(descriptor) {\n        for (let [module, klass] of this.iterate(descriptor)) {\n            angular.module(module)[klass.type || \"service\"](klass.name, this);\n        }\n    }\n}\nService.$inject = \"$http\";"]}